widget community.livecode.trevordevore.treetogglebutton

	use com.livecode.canvas
	use com.livecode.widget
	use com.livecode.engine
	use community.livecode.trevordevore.widgethelpers

	metadata title is "Tree Toggle Button"
	metadata author is "Trevor DeVore"
	metadata version is "1.0.0"

	-- public
	private variable mIsOpen                as Boolean
	private variable mHasChildren           as Boolean
	private variable mOpenSVGPath           as Path
	private variable mClosedSVGPath         as Path
	private variable mNoChildrenSVGPath     as Path
	private variable mFillColor             as Color
	private variable mFillHiliteColor       as Color
	private variable mOpenColor             as optional Color -- inherits mFillColor by default
	private variable mOpenHiliteColor       as optional Color -- inherits mFillHiliteColor by default
	private variable mNoChildrenColor       as optional Color -- inherits mFillColor by default
	private variable mNoChildrenHiliteColor as optional Color -- inherits mFillHiliteColor by default

	-- private
	private variable mState                 as String

	property isOpen                         get mIsOpen                     set setIsOpen
	property hasChildren                    get mHasChildren                set setHasChildren
	property openSVGPath                    get getOpenSVGPath              set setOpenSVGPath
	property closedSVGPath                  get getClosedSVGPath            set setClosedSVGPath
	property noChildrenSVGPath              get getNoChildrenSVGPath        set setNoChildrenSVGPath
	property fillColor                      get getFillColor                set setFillColor
	property fillHiliteColor                get getFillHiliteColor          set setFillHiliteColor
	property openColor                      get getOpenColor                set setOpenColor
	property openHiliteColor                get getOpenHiliteColor          set setOpenHiliteColor
	property noChildrenColor                get getNoChildrenColor          set setNoChildrenColor
	property noChildrenHiliteColor          get getNoChildrenHiliteColor    set setNoChildrenHiliteColor

	metadata openSVGPath.editor             is "com.livecode.pi.text"
	metadata closedSVGPath.editor           is "com.livecode.pi.text"
	metadata noChildrenSVGPath.editor       is "com.livecode.pi.text"
	metadata fillColor.editor               is "com.livecode.pi.color"
	metadata fillHiliteColor.editor         is "com.livecode.pi.color"
	metadata openColor.editor               is "com.livecode.pi.color"
	metadata openHiliteColor.editor         is "com.livecode.pi.color"
	metadata noChildrenColor.editor         is "com.livecode.pi.color"
	metadata noChildrenHiliteColor.editor   is "com.livecode.pi.color"

	metadata fillColor.section              is "Colors"
	metadata fillHiliteColor.section        is "Colors"
	metadata openColor.section              is "Colors"
	metadata openHiliteColor.section        is "Colors"
	metadata noChildrenColor.section        is "Colors"
	metadata noChildrenHiliteColor.section  is "Colors"


	private handler setIsOpen(in pBoolean as Boolean)
		put pBoolean into mIsOpen
		redraw all
	end handler


	private handler setHasChildren(in pBoolean as Boolean)
		put pBoolean into mHasChildren
		redraw all
	end handler


	private handler getOpenSVGPath() returns String
		return the instructions of mOpenSVGPath
	end handler

	private handler setOpenSVGPath(in pPath as String)
		put path pPath into mOpenSVGPath
		calculatePaths()
		redraw all
	end handler


	private handler getClosedSVGPath() returns String
		return the instructions of mClosedSVGPath
	end handler

	private handler setClosedSVGPath(in pPath as String)
		put path pPath into mClosedSVGPath
		calculatePaths()
		redraw all
	end handler


	private handler getNoChildrenSVGPath() returns String
		return the instructions of mNoChildrenSVGPath
	end handler

	private handler setNoChildrenSVGPath(in pPath as String)
		put path pPath into mNoChildrenSVGPath
		calculatePaths()
		redraw all
	end handler


	private handler getFillColor() returns String
		return colorToString(mFillColor, false)
	end handler

	private handler setFillColor(in pString as String)
		put stringToColor(pString) into mFillColor
		redraw all
	end handler


	private handler getFillHiliteColor() returns String
		return colorToString(mFillHiliteColor, false)
	end handler

	private handler setFillHiliteColor(in pString as String)
		put stringToColor(pString) into mFillHiliteColor
		redraw all
	end handler


	private handler getOpenColor() returns String
		if mOpenColor is nothing then
			return ""
		else
			return colorToString(mOpenColor, false)
		end if
	end handler

	private handler setOpenColor(in pString as String)
		if pString is "" then
			put nothing into mOpenColor
		else
			put stringToColor(pString) into mOpenColor
		end if
		redraw all
	end handler


	private handler getOpenHiliteColor() returns String
		if mOpenHiliteColor is nothing then
			return ""
		else
			return colorToString(mOpenHiliteColor, false)
		end if
	end handler

	private handler setOpenHiliteColor(in pString as String)
		if pString is "" then
			put nothing into mOpenHiliteColor
		else
			put stringToColor(pString) into mOpenHiliteColor
		end if
		redraw all
	end handler


	private handler getNoChildrenColor() returns String
		if mNoChildrenColor is nothing then
			return ""
		else
			return colorToString(mNoChildrenColor, false)
		end if
	end handler

	private handler setNoChildrenColor(in pString as String)
		if pString is "" then
			put nothing into mNoChildrenColor
		else
			put stringToColor(pString) into mNoChildrenColor
		end if
		redraw all
	end handler


	private handler getNoChildrenHiliteColor() returns String
		if mNoChildrenHiliteColor is nothing then
			return ""
		else
			return colorToString(mNoChildrenHiliteColor, false)
		end if
	end handler

	private handler setNoChildrenHiliteColor(in pString as String)
		if pString is "" then
			put nothing into mNoChildrenHiliteColor
		else
			put stringToColor(pString) into mNoChildrenHiliteColor
		end if
		redraw all
	end handler


	public handler OnCreate()
		put true into mHasChildren
		put false into mIsOpen
		put color [0.4,0.4,0.4] into mFillColor
		put color [0,0,0] into mFillHiliteColor
		put nothing into mOpenColor
		put nothing into mOpenHiliteColor
		put nothing into mNoChildrenColor
		put nothing into mNoChildrenHiliteColor
		put path "M13.3,0H2.7C1.2,0,0,1.2,0,2.7v10.7C0,14.8,1.2,16,2.7,16h10.7c1.5,0,2.7-1.2,2.7-2.7V2.7C16,1.2,14.8,0,13.3,0z M12.7,9.3 H9.3v3.3H6.7V9.3H3.3V6.7h3.3V3.3h2.7v3.3h3.3V9.3z" into mClosedSVGPath
		put path "M13.3,0H2.7C1.2,0,0,1.2,0,2.7v10.7C0,14.8,1.2,16,2.7,16h10.7 c1.5,0,2.7-1.2,2.7-2.7V2.7C16,1.2,14.8,0,13.3,0z M12.7,9.3H3.3V6.7h9.3V9.3z" into mOpenSVGPath
		put path "M13.3,0H2.7C1.2,0,0,1.2,0,2.7v10.7C0,14.8,1.2,16,2.7,16h10.7c1.5,0,2.7-1.2,2.7-2.7V2.7C16,1.2,14.8,0,13.3,0z M14.4,12.3 c0,1.2-1,2.1-2.1,2.1H3.7c-1.2,0-2.1-1-2.1-2.1V3.7c0-1.2,1-2.1,2.1-2.1h8.5c1.2,0,2.1,1,2.1,2.1V12.3z" into mNoChildrenSVGPath

		put "up" into mState
	end handler


	public handler OnSave(out rProperties as Array)
		put the empty array into rProperties

		put mIsOpen into rProperties["isOpen"]
		put the instructions of mOpenSVGPath into rProperties["openSVGPath"]
		put the instructions of mClosedSVGPath into rProperties["closedSVGPath"]
		put the instructions of mNoChildrenSVGPath into rProperties["noChildrenSVGPath"]
		put colorToString(mFillColor, true) into rProperties["fillColor"]
		put colorToString(mFillHiliteColor, true) into rProperties["fillHiliteColor"]
		if mOpenColor is nothing then
			put nothing into rProperties["openColor"]
		else
			put colorToString(mOpenColor, true) into rProperties["openColor"]
		end if
		if mOpenHiliteColor is nothing then
			put nothing into rProperties["openHiliteColor"]
		else
			put colorToString(mOpenHiliteColor, true) into rProperties["openHiliteColor"]
		end if
		if mNoChildrenColor is nothing then
			put nothing into rProperties["noChildrenColor"]
		else
			put colorToString(mNoChildrenColor, true) into rProperties["noChildrenColor"]
		end if
		if mNoChildrenHiliteColor is nothing then
			put nothing into rProperties["noChildrenHiliteColor"]
		else
			put colorToString(mNoChildrenHiliteColor, true) into rProperties["noChildrenHiliteColor"]
		end if
	end handler


	public handler OnLoad(in pProperties as Array)
		put pProperties["isOpen"] into mIsOpen
		put path pProperties["openSVGPath"] into mOpenSVGPath
		put path pProperties["closedSVGPath"] into mClosedSVGPath
		put path pProperties["noChildrenSVGPath"] into mNoChildrenSVGPath
		put stringToColor(pProperties["fillColor"]) into mFillColor
		put stringToColor(pProperties["fillHiliteColor"]) into mFillHiliteColor
		if pProperties["openColor"] is nothing then
			put nothing into mOpenColor
		else
			put stringToColor(pProperties["openColor"]) into mOpenColor
		end if
		if pProperties["openHiliteColor"] is nothing then
			put nothing into mOpenHiliteColor
		else
			put stringToColor(pProperties["openHiliteColor"]) into mOpenHiliteColor
		end if
		if pProperties["noChildrenColor"] is nothing then
			put nothing into mNoChildrenColor
		else
			put stringToColor(pProperties["noChildrenColor"]) into mNoChildrenColor
		end if
		if pProperties["noChildrenHiliteColor"] is nothing then
			put nothing into mNoChildrenHiliteColor
		else
			put stringToColor(pProperties["noChildrenHiliteColor"]) into mNoChildrenHiliteColor
		end if
	end handler


	public handler OnOpen()
		calculatePaths()
	end handler


	public handler OnPaint()
		-- Set color
		set the paint of this canvas to solid paint with getColor()

		if not mHasChildren then
			fill mNoChildrenSVGPath on this canvas
		else if mIsOpen then
			fill mOpenSVGPath on this canvas
		else
			fill mClosedSVGPath on this canvas
		end if
	end handler


	public handler OnMouseUp()
		if the current mouse position is within my bounds then
			post "mouseUp" with [FormatInt(the click button)]
		else
			post "mouseRelease" with [FormatInt(the click button)]
		end if

		put "up" into mState

		redraw all
	end handler


	public handler OnMouseCancel()
		post "mouseRelease" with [FormatInt(the click button)]
		put "up" into mState
		redraw all
	end handler


	public handler OnMouseDown()
		put "down" into mState
		redraw all

		post "mouseDown" with [FormatInt(the click button)]
	end handler


	public handler OnGeometryChanged()
		calculatePaths()
		redraw all
	end handler


	private handler calculatePaths()
		-- Scale
		transform mOpenSVGPath by scaleAndMaintainAspectRatioTransform(the bounding box of mOpenSVGPath, my bounds, my rectangle)
		-- Reset to 0,0
		translate mOpenSVGPath by [- the left of the bounding box of mOpenSVGPath, - the top of the bounding box of mOpenSVGPath]

		-- Scale
		transform mClosedSVGPath by scaleAndMaintainAspectRatioTransform(the bounding box of mClosedSVGPath, my bounds, my rectangle)
		-- Reset to 0,0
		translate mClosedSVGPath by [- the left of the bounding box of mClosedSVGPath, - the top of the bounding box of mClosedSVGPath]

		-- Scale
		transform mNoChildrenSVGPath by scaleAndMaintainAspectRatioTransform(the bounding box of mNoChildrenSVGPath, my bounds, my rectangle)
		-- Reset to 0,0
		translate mNoChildrenSVGPath by [- the left of the bounding box of mNoChildrenSVGPath, - the top of the bounding box of mNoChildrenSVGPath]
	end handler


	private handler getColor() returns Color
		if mState is "up" then
			if not mHasChildren then
				if mNoChildrenColor is nothing then
					return mFillColor
				else
					return mNoChildrenColor
				end if
			else if not mIsOpen then
				return mFillColor
			else
				if mOpenColor is nothing then
					return mFillColor
				else
					return mOpenColor
				end if
			end if
		else
			if not mHasChildren then
				if mNoChildrenHiliteColor is nothing then
					return mFillHiliteColor
				else
					return mNoChildrenHiliteColor
				end if
			else if not mIsOpen then
				return mFillHiliteColor
			else
				if mOpenColor is nothing then
					return mFillHiliteColor
				else
					return mOpenHiliteColor
				end if
			end if
		end if
	end handler

end widget
