command hArray_SimpleWalk shortCall, hKey, @hKeyLinkArray, pSetName, pTestExceptions, pOriginalHkey
   /*
   Aims to do the same as "hArray_SimpleWalk" but faster using indexed arrays.
   Modified to use empty array index for hkeyLinkArray (needs tidying with "array_StripDeeperLevels"
   */
   breakpoint
   local newlyExportedHkeyArray
   
   if pOriginalHkey is empty then put hKey into pOriginalHkey
   
   if the commandkey is "Down" and the optionKey is "Down" then
      hkey_Deconstruct pOriginalHkey, oHandlerName, oHandlerType, oScriptObject, oHandlerNum
      put "Currently indexing" && kwote (hKey) into pTitle
      display_ObjectHKeyArray hKeyLinkArray, oScriptObject, empty, empty, pTitle
      put the result into treeView
      set the displayed_Hkey of treeView to hKey
      breakpoint  -- allow storing of work-in-progress (by refering to last hKey)
   end if
   
   -- find it
   local foundHKey, foundHandler
   hkey_Deconstruct hKey, hName, hType, hObject, hNum
   put item 1 of shortCall into callName
   put item 2 of shortCall into callType
   
   try
      put hArray_FindHkeyInHierarchy (shortCall, hObject) into foundCall
      if foundCall is empty then
         put hkey_FindAndIndex (callName, callType, hObject, pSetName) into foundCall
      end if
   catch e
      opn_Notify e, true
      breakpoint
   end try
   
   switch
      case foundCall is empty
         if hkey_MissingHandlerIsNotImportant (callName, callType) is true then return empty
         
         -- it's missing and should not be! -- hope it is not "dispatch" :)
         put merge ("Call '[[shortCall]]' for handler '[[hKey]]' is missing!") into someMessage
         opn_Notify someMessage, true
         
         put hkey_Construct (callName, callType, "missing", 1) into foundCall
         
         -- array_AddToIndex foundCall, hKey, hKeyLinkArray
         put empty into hKeyLinkArray [hKey][foundCall]
         return empty
      case foundCall is among the keys of hKeyLinkArray
         -- found it, but we do need to add it to the array!
         -- array_AddToIndex foundCall, hKey, hKeyLinkArray
         put empty into hKeyLinkArray [hKey][foundCall]
         
         -- already indexed so no need to recurse
         return empty
      default
         -- continue
   end switch
   
   -- hack for exceptions
   if pTestExceptions is true and hkey_DontRecurse (foundCall, pOriginalHkey) is true then return empty
   
   -- add it to the array
   put merge ("Added [[foundCall]] to hKeyArray!") into someMessage
   opn_Notify someMessage
   -- array_AddToIndex foundCall, hKey, hKeyLinkArray
   put empty into hKeyLinkArray [hKey][foundCall]
   
   
   -- now lets repeat and recurse for each call found
   put item 3 of foundCall into foundObject
   if the hArray_ObjectIndexCurrent of foundObject is false then
      -- hArray_IndexAndStoreHandlerAndCalls foundCall -- should be a lot faster
      hArray_IndexAndStoreScriptAndAllHkeyCalls foundObject -- take opportunity to fully index a new object
      get the result 
      union newlyExportedHkeyArray with it
   else
      put hArray_GetHandler (foundCall) into callHandler
   end if
   -- put hArray_GetCalls (foundCall, hArray) into shortCalls
   put hkey_FetchShortCalls (foundCall) into shortCalls
   
   repeat for each line shortCall in shortCalls
      hArray_SimpleWalk shortCall, foundCall, hKeyLinkArray, pEnvironmentFilter, pTestExceptions, pOriginalHkey
   end repeat
   return newlyExportedHkeyArray
end hArray_SimpleWalk