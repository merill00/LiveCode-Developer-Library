command git_DeleteFile someFile, pForce
   /*
   git rm Documentation/\*.txt
   Removes all *.txt files from the index that are under the Documentation directory and any of its subdirectories.
   
   Note that the asterisk * is quoted from the shell in this example; this lets git, and not the shell, expand the pathnames of files and subdirectories under the Documentation/ directory.
   
   git rm -f git-*.sh
   Because this example lets the shell expand the asterisk (i.e. you are listing the files explicitly), it does not remove subdir/git-foo.sh.
   */
   
   put someFile into bashedFile
   shell_BashParamEscape bashedFile
   
   if pForce is true then
      -- put "git rm --cached" && kwote(mTarget) into someShell
      put merge("git rm --force [[bashedFile]]") into someShell
   else
      put merge("git rm [[bashedFile]]") into someShell
   end if
   put git_ExecuteShellCommand(someShell) into shellResult
   if shellResult begins with "fatal: pathspec '" or shellResult begins with "error:" then
      -- fatal: pathspec 'opn_Plugins/opn_Text/colour/swatch/Beach' did not match any files
      -- assume it is untracked (could check before) ?
      if there is a file someFile then
         delete file someFile
      end if
      -- beep
   end if
   return shellResult
end git_DeleteFile