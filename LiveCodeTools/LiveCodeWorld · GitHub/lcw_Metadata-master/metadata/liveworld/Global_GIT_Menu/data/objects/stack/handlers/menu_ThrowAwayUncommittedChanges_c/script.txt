on menu_ThrowAwayUncommittedChanges
   /*
   Note: git revert is used to record a new commit to reverse the effect of an earlier commit (often a faulty one). If you want to throw away all uncommitted changes in your working directory, you should see git-
   reset(1), particularly the --hard option. If you want to extract specific files as they were in another commit, you should see git-checkout(1), specifically the git checkout <commit> -- <filename> syntax. Take care
   with these alternatives as both will discard uncommitted changes in your working directory.
   */
   
   put "git reset --hard HEAD" into someShell
   put git_ExecuteShellCommand(someShell) into shellResult
   git_RefreshDisplay true, "Git Status"
   
   if shellResult is not empty then
      opn_Notify shellResult, true
   end if
end menu_ThrowAwayUncommittedChanges