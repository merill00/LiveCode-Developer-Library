private function json.encodeString pString
   replace "\" with "\\" in pString
   replace quote with "\u0022" in pString
   replace numtochar(8) with "\b" in pString
   replace numtochar(9) with "\t" in pString
   replace numtochar(10) with "\n" in pString
   replace numtochar(12) with "\f" in pString
   replace numtochar(13) with "\r" in pString
   
   repeat for each item i in "0,1,2,3,4,5,6,7,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"
      replace numtochar(i) with "\u" & format("%04X", i) in pString
   end repeat
   
   if sUnicodeInput then
      return pString
   else
      # TKD: This shouldn't be necessary. If not UTF8 then it is platform encoded and
      #          utf8encode will translate it to UTF8. That is what JSON wants. [Untested]
      --      -- TO DEAL WITH DIACRITICS : 
      --      if platform() is "MacOS" then 
      --         repeat with i=129 to 255 
      --            put numtochar(i) into c 
      --            put format("%04x",chartonum(mactoiso(c))) into tHexEncode 
      --            replace c with "\u" & tHexEncode in pString 
      --         end repeat 
      --      else 
      --         repeat with i=129 to 255 
      --            replace numtochar(i) with "\u" & format("%04x", i) in pString 
      --         end repeat 
      --      end if
      
      return utf8encode(pString)
   end if
end json.encodeString