{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Most interesting was the lesson "How to communicate with other applications using sockets".\
\
Using the code for a "LiveCode Chat Server" I was able, with only a few alternations, to build basically what I'm after - a tiny server that listens on sockets, and does approbate action once a client connects (and then, sends queries).\
\
Atm I'm rewriting this code (since a lot of it isn't needed and I want a clear and readable code) to suit my needs. For less problems I decided that, for the moment, my "Server" should run on an Windows 2K server, as a service (it's here, and available). Porting later shouldn't be this much of a problem ...\
\
Lemme describe my ideas, maybe someone is able to point me to mistakes I'll inevitably will make:\
\
A "[StackName].exe", a most tiny StandAlone that has the relevant libraries linked, and that doesn't do anything but check them sockets listening. As soon as a client attempts to connect, or sends data, it relies on a second (normal) stack that contains the functions handling this, via "start using ..." on OpenStack. It will as well respond, for sure. .\
\
A stack "[StackName]_main.livecode", that is full of code to handle all kinds of basic events - checking valid users, encrypting, handling the Prefs, \uc0\u64257 ltering input for SQL queries etc. This is the \u64257 rst stack that's put "in use", but since this one controls the Prefs, more may be put in use after an initial call.\
\
.\
\
A stack "[StackName]_db.livecode", that contains the actual database code for the db given - this is the one that offers the DB-speci\uc0\u64257 c functions to make proper SQL code. Change this stack to the proper version if you stop using MySQL, and go back to MS-SQL .\
\
Maybe a stack "[StackName]_tools.livecode" to add customer-speci\uc0\u64257 c things - that could even be linked by an:\
\
.\
\
(maybe) additional "[StackName]_daemon.exe" (another standalone with "quit" as bottom line of each handler?) that is invoked by a timed job (cron), or by getting called by the "[StackName].exe", to prepare lookUp tables (in SQLite, or text-based) for a customer in time as soon as logging in of such is detected, for instance?\
\
OK, for now I only need to \uc0\u64257 nish a very simple base stack ("[StackName].exe") that reliably responds with dummy answers, and doesn't respond to unknown ppl. Should be done soon.\
\
Next then is to check how it behaves on a real server, running as a service (hoping NSSM will do it.)\
\
Then checking vulnerabilities, after that adding useful code by adding the stacks.\
\
Seems I have a lot or work for the next days. Feel free to add your thoughts, your knowledge and any warnings that might be useful!\
\
Thx, and have fun!\
\
PS: Thx for reading. Don't hesitate to reply even if you think you're not quali\uc0\u64257 ed - I'm less then you with a good probability;-) I'd be most happy for all and any thoughts, after all of the work of the recent I'm suffering of "tunnel-vision" for sure, and any outside idea might be a life-saver!\
\
PPS: Should I ever \uc0\u64257 nish this project it'll be OpenSource under the proper license - GPL V2? LiveCodeJournal.com, Github, MySite, whatever. I'll sell the customized installation (the work hours) to selected customers in my area. You are free to do such, too. I'll keep myself an edge with sparse comments in the sub-stacks - after all I have an old cat to feed, and if you ever had an old cat to feed you'll know how much they actually will eat! The fully commented code will be available for small coin, or free for all that commented here. Hope this is within the rules (else I'd change ...) ...}