{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green127\blue0;\red127\green127\blue0;\red127\green0\blue127;
\red0\green0\blue127;\red0\green127\blue127;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c49804\c0;\csgenericrgb\c49804\c49804\c0;\csgenericrgb\c49804\c0\c49804;
\csgenericrgb\c0\c0\c49804;\csgenericrgb\c0\c49804\c49804;}
\margl1440\margr1440\vieww22080\viewh20300\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Chat Server\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 1.tiff \width13600 \height10080 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\

\b\fs36 chat Server  Stack script:
\b0\fs24 \
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- added 11/1/06 by O.K\
\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  preOpenStack\
  
\b \cf3 open
\b0 \cf0  \cf4 stack\cf0  \cf5 "chat client"\cf0  \cf4 of\cf0  \cf4 this\cf0  \cf4 stack\

\b \cf0 end
\b0  preOpenStack\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\b\fs36 server -card script: None\
\
ON CARD \'93server-card\'94:\
\
Start server Button:
\b0\fs24 \
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- declare a variable here to make it available to the entire script\
\pard\pardeftab720\partightenfactor0
\cf3 local
\b0 \cf0  lChatterArray\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- when the mouse is clicked\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  mouseUp\
  
\b \cf2 -- provide visual feedback the server has been started\

\b0 \cf0   
\b \cf3 disable
\b0 \cf0  \cf4 me\
\cf0   
\b \cf2 -- make it possible to stop the server\

\b0 \cf0   
\b \cf3 enable
\b0 \cf0  \cf4 button\cf0  \cf5 "Stop server Button\'94\
\cf0   
\b \cf2 -- start accepting incoming connections\

\b0 \cf0   
\b \cf2 -- the port has been chosen randomly, a high number\

\b0 \cf0   
\b \cf2 -- is unlikely to be in use by anything else\

\b0 \cf0   
\b \cf2 -- when a connection is received, send the message "chatConnected"\

\b0 \cf0   
\b \cf3 accept
\b0 \cf0  \cf4 connections\cf0  
\b on
\b0  \cf4 port\cf0  \cf5 1987\cf0  \cf4 with\cf0  \cf4 message\cf0  chatConnected\

\b end
\b0  mouseUp\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- when a connection is recevied (this is first set up by mouseUp, above)\
-- the "s" variable contains the address and port of the computer\
-- that is connecting\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatConnected s\
  
\b \cf2 -- read in one line of data from the socket identified in the "s" variable\

\b0 \cf0   
\b \cf3 read
\b0 \cf0  \cf4 from\cf0  \cf4 socket\cf0  s \cf4 for\cf0  \cf5 1\cf0  \cf4 line\
\cf0   
\b \cf2 -- remove any trailing return character\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 line\cf0  \cf5 1\cf0  \cf4 of\cf0  it \cf4 into\cf0  tChatMessage\
  
\b \cf2 -- add this new connection to the array containing a list of connections\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  tChatMessage \cf4 into\cf0  lChatterArray[s]\
  
\b \cf2 -- call a handler to send a message to all clients informing them of the\

\b0 \cf0   
\b \cf2 -- new connection\

\b0 \cf0   broadcastToClients \cf5 "*"\cf0  & tChatMessage & \cf5 " has joined the chat"\
\cf0   
\b \cf2 -- put details of the new connection and a new line into the main field\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  tChatMessage && \cf5 "connected"\cf0  & 
\b \cf3 return
\b0 \cf0  \cf4 after\cf0  \cf4 field\cf0  \cf5 "serverstatus Field\'94\
\cf0   
\b \cf2 -- start reading from the new connection contained in the "s" variable\

\b0 \cf0   
\b \cf2 -- each time more data is received, call the chatMessage handler\

\b0 \cf0   
\b \cf3 read
\b0 \cf0  \cf4 from\cf0  \cf4 socket\cf0  s \cf4 with\cf0  \cf4 message\cf0  chatMessage\

\b end
\b0  chatConnected\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this handler is called when new data is received from a client\
-- it is first set up by the chatConnected handler above\
-- the variable "s" contains the host and port of the computer sending\
-- the variable "data" contains the text that they sent\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatMessage s,\cf4 data\
\cf0   
\b \cf2 -- put the chat message and a new line after the main field\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 data\cf0  & 
\b \cf3 return
\b0 \cf0  \cf4 after\cf0  \cf4 field\cf0  \cf5 "serverstatus Field\'94\
\cf0   
\b \cf2 -- send the chat message to all clients\

\b0 \cf0   broadCastToClients \cf4 data\
\cf0   
\b \cf2 -- when more data is received from this client, send this message again\

\b0 \cf0   
\b \cf3 read
\b0 \cf0  \cf4 from\cf0  \cf4 socket\cf0  s \cf4 with\cf0  \cf4 message\cf0  chatmessage\

\b end
\b0  chatMessage\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this handler is called by the two handlers above\
-- it sends the data contained in the "message" variable to all\
-- the currently connected clients\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  broadcasttoclients \cf4 message\
\cf0   
\b \cf2 -- get a list of all currently connected clients\

\b0 \cf0   
\b \cf2 -- we add each client to this array when they connect in the handler above\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 keys\cf0 (lChatterArray) \cf4 into\cf0  tChatterList\
  
\b \cf2 -- cycle through all of the currently connected clients\

\b0 \cf0   
\b \cf2 -- placing the host and port for each one into the variable "tSocket"\

\b0 \cf0   
\b repeat
\b0  \cf4 for\cf0  \cf4 each\cf0  \cf4 line\cf0  tSocket \cf4 in\cf0  tChatterList\
    
\b \cf2 -- send the data contained in the message variable to the client\

\b0 \cf0     
\b \cf3 write
\b0 \cf0  \cf4 message\cf0  \cf4 to\cf0  \cf4 socket\cf0  tSocket\
  
\b end
\b0  
\b repeat\
end
\b0  broadcasttoclients\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this message is sent when a client disconnects\
-- the "s" variable contains the host and port of the client that disconnected\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  socketClosed s\
  
\b \cf2 -- look up the status of this client in the array we stored earlier\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  lChatterArray[s] \cf4 into\cf0  tChatter\
  
\b \cf2 -- display this client disconnected to the main field\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  tChatter && \cf5 "disconnected"\cf0  & 
\b \cf3 return
\b0 \cf0  \cf4 after\cf0  \cf4 field\cf0  \cf5 "serverstatus Field\'94\
\cf0   
\b \cf2 -- delete the reference to this client in the clients list array\

\b0 \cf0   
\b \cf3 delete
\b0 \cf0  lChatterArray[s]\
  
\b \cf2 -- tell all the remaining clients that this client has disconnected\

\b0 \cf0   broadCastToClients \cf5 "*"\cf0  & tChatter && \cf5 "has left"\

\b \cf0 end
\b0  socketClosed\
\
\
\

\b\fs36 Stop server Button:
\b0\fs24 \
\

\b on
\b0  mouseUp\
  
\b \cf2 -- provide visual feedback that the server is stopped\

\b0 \cf0   
\b \cf3 disable
\b0 \cf0  \cf4 me\
\cf0   
\b \cf2 -- make it possible to start the server again\

\b0 \cf0   
\b \cf3 enable
\b0 \cf0  \cf4 button\cf0  \cf5 "Start server Button\'94\
\cf0   
\b \cf2 -- the openSockets contains a list of all socket connections that are open\

\b0 \cf0   
\b \cf2 -- cycle through that list, putting each item in it into the variable "a"\

\b0 \cf0   
\b \cf2 -- each time we go around the loop\

\b0 \cf0   
\b repeat
\b0  \cf4 for\cf0  \cf4 each\cf0  \cf4 line\cf0  \cf4 a\cf0  \cf4 in\cf0  \cf4 the\cf0  \cf4 opensockets\
\cf0     
\b \cf2 -- close the connection contained in the variable "a"\

\b0 \cf0     
\b \cf3 close
\b0 \cf0  \cf4 socket\cf0  \cf4 a\
\cf0   
\b end
\b0  
\b repeat\
end
\b0  mouseUp\
\
\

\b\fs36 Clear Button:
\b0\fs24 \
\

\b on
\b0  mouseUp\
  
\b \cf2 -- clear the text in the main field\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 empty\cf0  \cf4 into\cf0  \cf4 field\cf0  \cf5 "serverstatus Field\'94\

\b \cf0 end
\b0  mouseUp\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs36 \cf0 chat client  Stack script:
\b0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\b \cf2 -- declaring a variable here will make it available to the entire script\
-- the lChatSocket variable contains the host and port for the connection\
\pard\pardeftab720\partightenfactor0
\cf3 local
\b0 \cf0  lChatSocket\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this handler is called by the mouseUp handler in the\
-- script of the connect button\
-- it starts the connection to the chat server\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatConnect\
  
\b \cf2 -- clear the responses field\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 empty\cf0  \cf4 into\cf0  \cf4 field\cf0  \cf5 "responses Field"\
\cf0   
\b \cf2 -- prevent the user from typing while waiting for the connection to open\

\b0 \cf0   
\b \cf3 disable
\b0 \cf0  
\b \cf3 group
\b0 \cf0  \cf5 1\
\cf0   
\b \cf2 -- open a connection to the host address specified in the host field\

\b0 \cf0   
\b \cf2 -- using port 1987, a number chosen randomly.  a high port number\

\b0 \cf0   
\b \cf2 -- is unlikely to conflict with another application\

\b0 \cf0   
\b \cf2 -- send a message "chatConnected" when sucessfully connected to this host\

\b0 \cf0   
\b \cf3 open
\b0 \cf0  \cf4 socket\cf0  \cf4 field\cf0  \cf5 "host"\cf0  & \cf5 ":1987"\cf0  \cf4 with\cf0  \cf4 message\cf0  \cf5 "chatConnected"\

\b \cf0 end
\b0  chatConnect\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this handler is called by the mouseUp handler in the\
-- script of the connect button\
-- it stops the connection to the chat server\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatDisconnect\
  
\b \cf2 -- close the connection to the host and port stored in the lChatSocket variable\

\b0 \cf0   
\b \cf3 close
\b0 \cf0  \cf4 socket\cf0  lChatSocket\
  
\b \cf2 -- prevent the user from typing as the connection is now closed\

\b0 \cf0   
\b \cf3 disable
\b0 \cf0  
\b \cf3 group
\b0 \cf0  \cf5 1\
\cf0   
\b \cf2 -- change the connect button to show we are disconnected and to allow connecting\

\b0 \cf0   
\b \cf3 set
\b0 \cf0  \cf4 the\cf0  \cf6 label\cf0  \cf4 of\cf0  \cf4 button\cf0  \cf5 "connect Button\'94\cf0  \cf4 to\cf0  \cf5 "Connect"\

\b \cf0 end
\b0  chatDisconnect\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this message is sent when the stack is closed\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  closeStack\
  
\b \cf2 -- call the disconnection handler (above)\

\b0 \cf0   chatDisconnect\

\b end
\b0  closeStack\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this message handler is set up in the chatConnect handler above\
-- it is called when a connection is established\
-- the "s" variable contains the host and port of the server we\
-- are now connected to\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatConnected s\
  
\b \cf2 -- activate the controls in group 1 so the user can type\

\b0 \cf0   
\b \cf3 enable
\b0 \cf0  
\b \cf3 group
\b0 \cf0  \cf5 1\
\cf0   
\b \cf2 -- change the connect button to show we are successfully\

\b0 \cf0   
\b \cf2 -- connected and to allow disconnecting\

\b0 \cf0   
\b \cf3 set
\b0 \cf0  \cf4 the\cf0  \cf6 label\cf0  \cf4 of\cf0  \cf4 button\cf0  \cf5 "connect Button\'94\cf0  \cf4 to\cf0  \cf5 "Disconnect"\
\cf0   
\b \cf2 -- store the host and port of the server we are now connected to\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  s \cf4 into\cf0  lChatSocket\
  
\b \cf2 -- send the user name to the chat server so it can broadcast\

\b0 \cf0   
\b \cf2 -- this to other chat clients\

\b0 \cf0   
\b \cf3 write
\b0 \cf0  \cf4 field\cf0  \cf5 "username"\cf0  & 
\b \cf3 return
\b0 \cf0  \cf4 to\cf0  \cf4 socket\cf0  lChatSocket\
  
\b \cf2 -- specify the message to be sent whenever any data is received from\

\b0 \cf0   
\b \cf2 -- the chat server connection\

\b0 \cf0   
\b \cf3 read
\b0 \cf0  \cf4 from\cf0  \cf4 socket\cf0  s \cf4 with\cf0  \cf4 message\cf0  chatReceived\

\b end
\b0  chatConnected\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this message is called when data is received from the chat server\
-- it is first set up in the handler chatConnected above\
-- the variable "s" contains the host that connected\
-- the variable "data" contains the data that was sent\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatReceived s,\cf4 data\
\cf0   
\b \cf2 -- display the data that was sent\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 data\cf0  & 
\b \cf3 return
\b0 \cf0  \cf4 after\cf0  \cf4 field\cf0  \cf5 "responses Field"\
\cf0   
\b \cf2 -- specify that this message is to be sent again when more data is received\

\b0 \cf0   
\b \cf3 read
\b0 \cf0  \cf4 from\cf0  \cf4 socket\cf0  s \cf4 with\cf0  \cf4 message\cf0  chatReceived\

\b end
\b0  chatReceived\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this message is sent automatically in the event of an error\
-- the "s" variable contains the host and port connected\
-- the data variable contains the error message\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  socketerror s,\cf4 data\
\cf0   
\b \cf2 -- prevent the user typing\

\b0 \cf0   
\b \cf3 disable
\b0 \cf0  
\b \cf3 group
\b0 \cf0  \cf5 1\
\cf0   
\b \cf2 -- show we are disconnected now and make it possible to start\

\b0 \cf0   
\b \cf2 -- a new connection\

\b0 \cf0   
\b \cf3 set
\b0 \cf0  \cf4 the\cf0  \cf6 label\cf0  \cf4 of\cf0  \cf4 button\cf0  \cf5 "connect"\cf0  \cf4 to\cf0  \cf5 "Connect"\
\cf0   
\b \cf2 -- display a dialog on the screen with the error message\

\b0 \cf0   
\b \cf3 answer
\b0 \cf0  \cf4 data\

\b \cf0 end
\b0  socketerror\
\
\pard\pardeftab720\partightenfactor0

\b \cf2 -- this message handler is called in the mouseUp handler of the\
-- send button.  the "data" variable contains the message to send\
-- it sends that data to the chat server\
\pard\pardeftab720\partightenfactor0
\cf0 on
\b0  chatMessage \cf4 data\
\cf0   
\b \cf2 -- send the user name followed by the data to the chat server\

\b0 \cf0   
\b \cf2 -- connection is stored in the lChatSocket variable\

\b0 \cf0   
\b \cf3 write
\b0 \cf0  \cf4 field\cf0  \cf5 "username"\cf0  & \cf5 ":"\cf0  & \cf4 data\cf0  \cf4 to\cf0  \cf4 socket\cf0  lChatSocket\

\b end
\b0  chatMessage\
\
\
\

\b\fs36 chat-card script: None\
\
ON CARD \'93chat-card\'94:\
\
Connect Button:\
\

\fs24 on
\b0  mouseUp\
  
\b if
\b0  \cf4 the\cf0  \cf6 label\cf0  \cf4 of\cf0  \cf4 me\cf0  \cf4 is\cf0  \cf5 "Connect"\cf0  
\b then\

\b0     chatConnect\
  
\b else\

\b0     chatDisconnect\
  
\b end
\b0  
\b if\
end
\b0  mouseUp\
\
\

\b\fs36 Chatmessage Field:\

\b0\fs24 \

\b on
\b0  returnInField\
  
\b \cf2 -- send a mouseUp message to the send button\

\b0 \cf0   
\b \cf2 -- we use "click at" instead of "send mouseUp" so that\

\b0 \cf0   
\b \cf2 -- we get the visual feedback associated with clicking on the button\

\b0 \cf0   
\b \cf3 click
\b0 \cf0  \cf4 at\cf0  \cf4 the\cf0  \cf6 location\cf0  \cf4 of\cf0  \cf4 button\cf0  \cf5 "Send Button"\

\b \cf0 end
\b0  returnInField\
\

\b on
\b0  enterInField\
  
\b \cf2 -- activate the handler above\

\b0 \cf0   
\b \cf2 -- this is short hand for writing out the handler again, but would save\

\b0 \cf0   
\b \cf2 -- time if we ever made the handler above more complex\

\b0 \cf0   returnInField\

\b end
\b0  enterInField\
\
\

\b\fs36 Send Button:
\b0\fs24 \
\

\b on
\b0  mouseUp\
  
\b \cf2 -- chatMessage is a message handler in the stack script\

\b0 \cf0   
\b \cf2 -- send this message together with the contents of the field\

\b0 \cf0   
\b \cf2 -- the user typed in\

\b0 \cf0   chatMessage \cf4 field\cf0  \cf5 "chatmessage Field"\
\cf0   
\b \cf2 -- clear the field so the user can type another message\

\b0 \cf0   
\b \cf3 put
\b0 \cf0  \cf4 empty\cf0  \cf4 into\cf0  \cf4 field\cf0  \cf5 "chatmessage Field"\

\b \cf0 end
\b0  mouseUp\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}