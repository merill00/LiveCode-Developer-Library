{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica-Oblique;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red59\green59\blue59;\red247\green247\blue247;\red59\green59\blue59;
\red255\green255\blue255;\red35\green74\blue136;\red26\green134\blue195;\red23\green182\blue240;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c29804\c29804\c29804;\cssrgb\c97647\c97647\c97647;\cssrgb\c29804\c29804\c29804\c80000;
\cssrgb\c100000\c100000\c100000;\cssrgb\c17647\c37255\c60392;\cssrgb\c9804\c60000\c80784;\cssrgb\c0\c76471\c95294;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww15880\viewh19700\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
LiveCode Server\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\i\b0\fs28 \cf4 \cb3 by {\field{\*\fldinst{HYPERLINK "https://livecode.com/author/dwilliams/"}}{\fldrslt David Williams }}on March 6, 2014 {\field{\*\fldinst{HYPERLINK "https://livecode.com/livecode-server/#comments"}}{\fldrslt 5 comments}}\cb1 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.facebook.com/sharer.php?u=https%3A%2F%2Flivecode.com%2Flivecode-server%2F"}}{\fldrslt 
\f2\i0\fs30 \cf5 \cb6 Share\'a0on\'a0Facebook}}
\f2\i0\fs30 \cf7 \cb6 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://twitter.com/intent/tweet?text=LiveCode%20Server&url=https://livecode.com/livecode-server/"}}{\fldrslt \cf5 \cb8 Share\'a0on\'a0Twitter}}\cb8 \
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Here at On-Rev, we make extensive use of LiveCode Server internally for scripting \'96 you\'92ll see a lot more filenames ending in .lc than you might in .sh, purely for the reason that LiveCode Server is great for making scripts that are a lot more readable than, say, a bash script, and we can drop in shell commands with ease where necessary.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 {{\NeXTGraphic Screenshot-3_6_2014-1_10_23-PM.jpg \width14000 \height6780 \noorient \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 One recent feature that was introduced in LiveCode 6.6 was the ability to use hashbangs (#! /path/to/livecode) in LiveCode server scripts instead of script open and close tags (<?lc ?>). This means that we can have scripts which look like this:\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 #!/path/to/livecode-server
\f2\b0 \cb1 \

\f0\b \cb3 put \'93hello world at\'94 && the millisecs
\f2\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Instead of this:\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 <?lc
\f2\b0 \cb1 \

\f0\b \cb3 put \'93hello world at\'94 && the millisecs
\f2\b0 \cb1 \

\f0\b \cb3 ?>
\f2\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 The difference is that the latter has to be passed as a file to the LC Server exectuable, which then parses the code for output. This makes sense where LC Server is integrated into a web server software for serving webpages, but if we were doing this in a command line, it would look like this:\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf2 \cb5 root@mybox [~]# /path/to/livecode-server ./script.lc\cf0 \
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 Whereas by using hashbangs, we can now execute the script directly, as the script contains the information for how it should be executed:\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf2 \cb5 root@mybox [~]# ./script.lc\cf0 \
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 This seems like a minor change, but it brings the LC Server engine closer to how scripting for system utilities should function in a Unix environment, and allows me to tidy up some of the internal systems we use a little bit.\cb1 \
\cb3 Additionally, work on the On-Rev client has been ongoing and we hope to release an update as soon as some of the last technical hurdles are overcome \'96 we hope to send out a notification about this to all our On-Rev customers in the near future.}